name: "Development"

on:
    pull_request:
        types:
            - opened
            - edited
            - synchronize
            - reopened
    workflow_call:
        
jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3.5.0
              with:
                  fetch-depth: 0
            - name: Setup .NET Core SDK
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "7.0.x"
            # Not specifying a version will attempt to install via global.json
            - name: Use .NET Core global.json
              uses: actions/setup-dotnet@v3
            - uses: actions/cache@v3
              with:
                  path: ~/.nuget/packages
                  # Look to see if there is a cache hit for the corresponding requirements file
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget
            - name: Check Format Code
              if: runner.os != 'Windows'
              run: |
                  chmod +x ./build.sh
                  ./build.sh CheckFormatCode
              env:
                  CI: true
            - name: Check Format Code
              if: runner.os == 'Windows'
              run: ./build.cmd CheckFormatCode
              env:
                  CI: true

    test:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macOS-latest]
        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/checkout@v3.5.0
            - name: Setup .NET Core SDK
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "7.0.x"
            # Not specifying a version will attempt to install via global.json
            - name: Use .NET Core global.json
              uses: actions/setup-dotnet@v3
            - uses: actions/cache@v3
              with:
                  path: ~/.nuget/packages
                  # Look to see if there is a cache hit for the corresponding requirements file
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget
            - name: Test
              if: runner.os != 'Windows'
              run: |
                  chmod +x ./build.sh
                  ./build.sh GenerateCoverageReport
              env:
                  CI: true
            - name: Test
              if: runner.os == 'Windows'
              run: ./build.cmd GenerateCoverageReport
              env:
                  CI: true
            - name: Upload Artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: docs
                  path: ./docs
                  retention-days: 21

    ci:
        runs-on: ubuntu-latest
        needs: [lint, test]
        steps:
            - name: Aggregate of lint, and all tests
              run: echo "ci passed"

